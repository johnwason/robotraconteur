name: Build Python Version

on: 
  push:
  pull_request:
  release:
    types:
      - created

jobs:
  build-win:
    runs-on: windows-2016
    strategy:
      matrix:
        config:
          - arch: x64
            vcpkg_triplet: x64-windows-static-md
            cmake_arch: x64
          - arch: x86
            vcpkg_triplet: x86-windows-static-md
            cmake_arch: Win32
        python_version: [3.7,3.9]
    steps:
    - uses: actions/checkout@v2
      with:
        path: robotraconteur
    - uses: actions/setup-python@v2
      with:
        python-version: '${{ matrix.python_version }}'
        architecture: ${{ matrix.config.arch }}
    - name: checkout vcpkg
      uses: actions/checkout@v2
      with:
        path: vcpkg
        repository: microsoft/vcpkg
    - name: bootstrap vcpkg
      working-directory: vcpkg
      run: bootstrap-vcpkg.bat
    - name: cache-vcpkg-archives
      if: startsWith(github.ref, 'refs/tags/v') != true
      id: cache-vcpkg-archives
      uses: actions/cache@v2
      with:
        path: C:\Users\runneradmin\AppData\Local\vcpkg\archives
        key: ${{ runner.os }}-${{ matrix.config.arch }}-${{ hashFiles('vcpkg/ports/boost-config/*') }}-${{ hashFiles('vcpkg/ports/openssl/*') }}-vcpkg-build-python-version
    - name: vcpkg
      working-directory: vcpkg
      run: >
        vcpkg install --triplet ${{ matrix.config.vcpkg_triplet }} boost-algorithm boost-array boost-asio 
        boost-assign boost-atomic boost-bind boost-config boost-container boost-date-time 
        boost-smart-ptr boost-filesystem boost-foreach boost-format boost-function boost-interprocess
        boost-intrusive boost-lexical-cast boost-locale boost-random boost-range boost-regex
        boost-scope-exit boost-signals2 boost-thread boost-tuple boost-unordered 
        boost-utility boost-uuid boost-program-options
    - name: pip3
      run: |
        python -m pip install numpy setuptools wheel
    - name: env python3
      run: echo  ("PYTHON3_EXE=" + (Get-Command Python.exe).Path) | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: choco
      run: |
        choco install swig -r
    - name: cache-build
      if: startsWith(github.ref, 'refs/tags/v') != true
      id: cache-build
      uses: mikehardy/buildcache-action@v1
      with:
        cache_key: ${{ runner.os }}-${{ matrix.config.arch }}-build-python-version-${{ matrix.python_version }}-buildcache
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.config.arch }}
    - name: configure
      run: >
        cmake -G "Ninja"
        -DBoost_USE_STATIC_LIBS=ON
        -DBUILD_PYTHON3=ON -DBUILD_PYTHON3_WHEEL=ON        
        -DPYTHON3_EXECUTABLE="${{ env.PYTHON3_EXE }}"
        -DCMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake
        -DVCPKG_TARGET_TRIPLET=${{ matrix.config.vcpkg_triplet }}
        -DCMAKE_C_COMPILER_LAUNCHER=buildcache -DCMAKE_CXX_COMPILER_LAUNCHER=buildcache
        -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON
        -DCMAKE_BUILD_TYPE=Release
        -S robotraconteur -B build2
    - name: build
      working-directory: build2
      run: |
        cmake --build . --config Release -j 4
    - name: test
      working-directory: build2
      run: |
        ctest . -C Release --output-on-failure
    - name: move out
      run: |
        mv build2/out .
    - name: archive out
      uses: actions/upload-artifact@v2
      with:
        name: 'out-win-${{ matrix.config.arch }}-python-${{ matrix.python_version }}'
        path: out/*
    - name: build artifacts
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: 'build-artifacts-win-${{ matrix.config.arch }}-python-${{ matrix.python_version }}'
        path: build2/*
        retention-days: 2 

  build-osx:

    runs-on: macos-10.15
    env:
      LIBRARY_PATH: /usr/local/opt/icu4c/lib
    strategy:
      matrix:
        python_version: [3.7,3.9]
    steps:
    - uses: actions/checkout@v2
      with:
        path: robotraconteur
    - name: brew
      run: |
        brew install swig boost openssl
    - uses: actions/setup-python@v2
      with:
        python-version: '${{ matrix.python_version }}'
        architecture: x64
    - name: pip3
      run: |
        python -m pip install numpy setuptools wheel
    - name: env python3
      run: echo "PYTHON3_EXE=${{ env.pythonLocation }}/bin/python" >> $GITHUB_ENV
    - name: cache-build
      if: startsWith(github.ref, 'refs/tags/v') != true
      id: cache-build
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ runner.os }}-build-python-version-${{ matrix.python_version }}-ccache
    - name: configure
      run: >
        cmake -G "Xcode" -DBUILD_GEN=ON  -DBUILD_PYTHON3=ON -DBUILD_PYTHON3_WHEEL=ON 
        -DBoost_USE_STATIC_LIBS=ON -DCMAKE_BUILD_TYPE=Release        
        -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl
        -DOPENSSL_USE_STATIC_LIBS=ON
        -DPYTHON3_EXECUTABLE="${{ env.PYTHON3_EXE }}"
        -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
        -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON
        -S robotraconteur -B build2
    - name: build
      working-directory: build2
      run: |        
        cmake --build . --config Release -j 4
    - name: test
      working-directory: build2
      run: |
        ctest . -C Release --output-on-failure
    - name: move out
      run: |
        mv build2/out .
    - name: archive out
      uses: actions/upload-artifact@v2
      with:
        name: 'out-osx-python-${{ matrix.python_version }}'
        path: out/*
    - name: build artifacts
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: 'build-artifacts-osx-python-${{ matrix.python_version }}'
        path: build2/*
        retention-days: 2  
    
      